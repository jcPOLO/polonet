"""seed

Revision ID: a25f324a9045
Revises: 
Create Date: 2022-02-19 01:41:58.105623

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a25f324a9045'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    """Initial Migration

Revision ID: 706622dbde52
Revises: 
Create Date: 2022-02-19 01:30:46.843283

"""
from alembic import op
import sqlalchemy as sa
from werkzeug.security import generate_password_hash
from datetime import datetime

# revision identifiers, used by Alembic.
revision = '706622dbde52'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('job')
    # op.drop_table('devices')
    # op.drop_table('inventory')
    # op.drop_table('device')
    # op.drop_table('user')
    # op.drop_table('status_code')
    # ### end Alembic commands ###
    status_code = op.create_table('status_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('message', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    user = op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('password', sa.String(length=150), nullable=False),
    sa.Column('first_name', sa.String(length=150), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('device',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('hostname', sa.String(length=39), nullable=False),
    sa.Column('platform', sa.String(length=20), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('custom', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('slug', sa.String(length=60), nullable=False),
    sa.Column('data', sa.String(length=10000), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'slug', name='unique_inventory_name')
    )
    op.create_table('devices',
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ),
    sa.PrimaryKeyConstraint('inventory_id', 'device_id')
    )
    op.create_table('job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('output', sa.String(length=10000), nullable=False),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ),
    sa.ForeignKeyConstraint(['status'], ['status_code.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
    op.bulk_insert(
        status_code,
        [
            {'message':'successful'},
            {'message': 'failed'},
            {'message': 'error'}
        ]
    )
    op.bulk_insert(
        user,
        [
            dict(
                email='jcpolo@jcpolo.com',
                first_name='jcPOLO',
                password=generate_password_hash('a', method='sha256'),
                date_created=datetime.now(),
                date_modified=datetime.now()
            )
        ]
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('job')
    op.drop_table('devices')
    op.drop_table('inventory')
    op.drop_table('device')
    op.drop_table('user')
    op.drop_table('status_code')
    # ### end Alembic commands ###
